# Generated by Django 5.2 on 2025-05-26 07:55

import django.db.models.deletion
import storages.backends.s3
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=40, unique=True, verbose_name='Никнейм')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Является ли пользователь менеджером?')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('is_cook', models.BooleanField(default=False, verbose_name='Является ли пользователь поваром?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order_pizza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('DELETED', 'Deleted'), ('FORMED', 'Formed'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=10)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('formation_datetime', models.DateTimeField(blank=True, null=True)),
                ('completion_datetime', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_orders', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='managed_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pizza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('deleted', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, storage=storages.backends.s3.S3Storage(), upload_to='pizza/')),
                ('is_vegetarian', models.BooleanField(blank=True, null=True)),
                ('cook', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pizzas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductInOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_lab.order_pizza')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pizza_lab.pizza')),
            ],
            options={
                'unique_together': {('order', 'product')},
            },
        ),
    ]
